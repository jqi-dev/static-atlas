(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[16],{

/***/ "./client/notebooks/TestNotebook/TestNotebook.js":
/*!*******************************************************!*\
  !*** ./client/notebooks/TestNotebook/TestNotebook.js ***!
  \*******************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _templateObject = _taggedTemplateLiteral([\"\\n  div canvas {\\n    width: 100%!important;\\n  }\\n\"], [\"\\n  div canvas {\\n    width: 100%!important;\\n  }\\n\"]);\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _notebookRuntime = __webpack_require__(/*! @observablehq/notebook-runtime */ \"./node_modules/@observablehq/notebook-runtime/dist/notebook-runtime.js\");\n\nvar _notebook = __webpack_require__(/*! ./notebook */ \"./client/notebooks/TestNotebook/notebook.js\");\n\nvar _notebook2 = _interopRequireDefault(_notebook);\n\nvar _styledComponents = __webpack_require__(/*! styled-components */ \"./node_modules/styled-components/dist/styled-components.browser.es.js\");\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar CellContainer = _styledComponents2.default.div(_templateObject);\n\nvar TestNotebook = function (_React$Component) {\n  _inherits(TestNotebook, _React$Component);\n\n  function TestNotebook() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TestNotebook);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TestNotebook.__proto__ || Object.getPrototypeOf(TestNotebook)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      speed: 0.1,\n      color: \"red\"\n    }, _this.animationRef = _react2.default.createRef(), _this.colorRef = _react2.default.createRef(), _this.setSpeed = function (event) {\n      _this.setState({ speed: event.target.valueAsNumber });\n    }, _this.setColor = function (event) {\n      if (event.key === \"Enter\" && event.shiftKey) {\n        _this.setState({ color: event.target.value });\n        console.log(event.target.value);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TestNotebook, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //   Runtime.load(notebook, (cell) => {\n      //     if (cell.name === \"mutable speed\") {\n      //       return {\n      //         fulfilled: (value) => {\n      //           this.animationSpeed = value\n      //         }\n      //       }\n      //     }\n\n      //     if (cell.name === \"animation\") {\n      //       return new Inspector(this.animationRef.current)\n      //     }\n\n      //     if (cell.name === \"slider\") {\n      //       return new Inspector(document.getElementById(\"color\").appendChild(document.createElement(\"div\")))\n      //     }\n\n      //   })\n\n      _notebookRuntime.Runtime.load(_notebook2.default, function (cell) {\n        // if (cell.name === \"color\") {\n        //   return new Inspector(document.getElementById(\"color\").appendChild(document.createElement(\"div\")))\n        // }\n\n        // if (cell.name === \"html_color\") {\n        //   return new Inspector(this.colorRef.current)\n        //   // return new Inspector(document.getElementById(\"color\").appendChild(document.createElement(\"div\")))\n        // }\n        if (cell.inputs) {\n          if (cell.inputs.indexOf(\"mutable color\") !== -1 || cell.inputs.indexOf(\"color\") !== -1) {\n            return new _notebookRuntime.Inspector(document.getElementById(\"color\").appendChild(document.createElement(\"div\")));\n          }\n        }\n\n        if (cell.name === \"mutable color\") {\n          return {\n            fulfilled: function fulfilled(cell_object) {\n              _this2.color = cell_object;\n            }\n          };\n        }\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps, nextState) {\n      if (nextState.speed !== this.state.speed) {\n        this.animationSpeed.value = this.state.speed;\n      }\n\n      if (nextState.color !== this.state.color) {\n        this.color.value = this.state.color;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\n        \"div\",\n        { className: \"w-100\", id: \"testnotebookcontainer\" },\n        \"An observable notebook\",\n        _react2.default.createElement(\n          CellContainer,\n          null,\n          _react2.default.createElement(\"div\", { ref: this.animationRef })\n        ),\n        _react2.default.createElement(\n          \"small\",\n          null,\n          \"Speed: \",\n          this.state.speed\n        ),\n        _react2.default.createElement(\"br\", null),\n        _react2.default.createElement(\"input\", { type: \"text\", defaultValue: \"red\", onKeyPress: this.setColor }),\n        \" (shift+enter executes)\",\n        _react2.default.createElement(\"div\", { id: \"color\", ref: this.colorRef })\n      );\n    }\n  }]);\n\n  return TestNotebook;\n}(_react2.default.Component);\n\nexports.default = TestNotebook;\n\n//# sourceURL=webpack:///./client/notebooks/TestNotebook/TestNotebook.js?");

/***/ }),

/***/ "./client/notebooks/TestNotebook/notebook.js":
/*!***************************************************!*\
  !*** ./client/notebooks/TestNotebook/notebook.js ***!
  \***************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _templateObject = _taggedTemplateLiteral([\"# Five-Minute Introduction\\n\\nWelcome to Observable! This notebook gives a quick but technical overview of Observable\\u2019s features. For a slightly longer introduction, see [Introduction to Notebooks](https://beta.observablehq.com/@mbostock/introduction-to-notebooks) and [introductory tutorial series](https://beta.observablehq.com/collection/introduction). If you want to watch rather than read, we\\u2019ve also posted a [short video introduction](https://www.youtube.com/watch?v=uEmDwflQ3xE)!\\n\\nAn Observable notebook is a sequence of cells. Each cell is a snippet of JavaScript. You can see (and edit!) the code for any cell by clicking the caret <svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"><polyline points=\\\"10 18 16 12 10 6\\\"></polyline></svg> in the left margin.\"], [\"# Five-Minute Introduction\\n\\nWelcome to Observable! This notebook gives a quick but technical overview of Observable\\u2019s features. For a slightly longer introduction, see [Introduction to Notebooks](https://beta.observablehq.com/@mbostock/introduction-to-notebooks) and [introductory tutorial series](https://beta.observablehq.com/collection/introduction). If you want to watch rather than read, we\\u2019ve also posted a [short video introduction](https://www.youtube.com/watch?v=uEmDwflQ3xE)!\\n\\nAn Observable notebook is a sequence of cells. Each cell is a snippet of JavaScript. You can see (and edit!) the code for any cell by clicking the caret <svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" fill=\\\"none\\\"><polyline points=\\\"10 18 16 12 10 6\\\"></polyline></svg> in the left margin.\"]),\n    _templateObject2 = _taggedTemplateLiteral([\"Cells can have names. This allows a cell\\u2019s value to be referenced by other cells.\"], [\"Cells can have names. This allows a cell\\u2019s value to be referenced by other cells.\"]),\n    _templateObject3 = _taggedTemplateLiteral([\"A cell referencing another cell is re-evaluated automatically when the referenced value changes. Try editing the definition of *color* above and shift-return to re-evaluate.\\n\\nCells can generate DOM (HTML, SVG, Canvas, WebGL, *etc.*). You can use the standard DOM API like *document*.createElement, or use the built-in *html* tagged template literal:\"], [\"A cell referencing another cell is re-evaluated automatically when the referenced value changes. Try editing the definition of *color* above and shift-return to re-evaluate.\\n\\nCells can generate DOM (HTML, SVG, Canvas, WebGL, *etc.*). You can use the standard DOM API like *document*.createElement, or use the built-in *html* tagged template literal:\"]),\n    _templateObject4 = _taggedTemplateLiteral([\"<span style=\\\"background:yellow;\\\">\\n  My favorite language is <i>HTML</i>.\\n</span>\"], [\"<span style=\\\"background:yellow;\\\">\\n  My favorite language is <i>HTML</i>.\\n</span>\"]),\n    _templateObject5 = _taggedTemplateLiteral([\"There\\u2019s a Markdown tagged template literal, too. (This notebook is written in Markdown.)\"], [\"There\\u2019s a Markdown tagged template literal, too. (This notebook is written in Markdown.)\"]),\n    _templateObject6 = _taggedTemplateLiteral([\"My favorite language is *Markdown*.\"], [\"My favorite language is *Markdown*.\"]),\n    _templateObject7 = _taggedTemplateLiteral([\"DOM can be made reactive simply by referring to other cells. The next cell refers to *color*. (Try editing the definition of *color* above.)\"], [\"DOM can be made reactive simply by referring to other cells. The next cell refers to *color*. (Try editing the definition of *color* above.)\"]),\n    _templateObject8 = _taggedTemplateLiteral([\"My favorite color is <i style=\\\"background:\", \";\\\">\", \"</i>.\"], [\"My favorite color is <i style=\\\"background:\", \";\\\">\", \"</i>.\"]),\n    _templateObject9 = _taggedTemplateLiteral([\"Sometimes you need to load data from a remote server, or compute something expensive in a web worker. For that, cells can be defined asynchronously using [promises](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Using_promises):\"], [\"Sometimes you need to load data from a remote server, or compute something expensive in a web worker. For that, cells can be defined asynchronously using [promises](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Using_promises):\"]),\n    _templateObject10 = _taggedTemplateLiteral([\"A cell that refers to a promise cell sees the value when it is resolved; this implicit await means that referencing cells don\\u2019t care whether the value is synchronous or not. Edit the *status* cell above to see the cell below update after two seconds.\"], [\"A cell that refers to a promise cell sees the value when it is resolved; this implicit await means that referencing cells don\\u2019t care whether the value is synchronous or not. Edit the *status* cell above to see the cell below update after two seconds.\"]),\n    _templateObject11 = _taggedTemplateLiteral([\"Promises are also useful for loading libraries from npm. Below, `require` returns a promise that resolves to the d3-fetch library:\"], [\"Promises are also useful for loading libraries from npm. Below, \\\\`require\\\\` returns a promise that resolves to the d3-fetch library:\"]),\n    _templateObject12 = _taggedTemplateLiteral([\"If you prefer, you can use async and await explicitly:\"], [\"If you prefer, you can use async and await explicitly:\"]),\n    _templateObject13 = _taggedTemplateLiteral([\"Cells can be defined as [generators](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Iterators_and_Generators#Generators); a value is yielded up to sixty times a second.\"], [\"Cells can be defined as [generators](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Iterators_and_Generators#Generators); a value is yielded up to sixty times a second.\"]),\n    _templateObject14 = _taggedTemplateLiteral([\"Any cell that refers to a generator cell sees its current value; the referencing cell is re-evaluated whenever the generator yields a new value. As you might guess, a generator can yield promises for [async iteration](https://github.com/tc39/proposal-async-iteration); referencing cells see the current resolved value.\"], [\"Any cell that refers to a generator cell sees its current value; the referencing cell is re-evaluated whenever the generator yields a new value. As you might guess, a generator can yield promises for [async iteration](https://github.com/tc39/proposal-async-iteration); referencing cells see the current resolved value.\"]),\n    _templateObject15 = _taggedTemplateLiteral([\"Combining these primitives\\u2014promises, generators and DOM\\u2014you can build custom user interfaces. Here\\u2019s a slider and a generator that yields the slider\\u2019s value:\"], [\"Combining these primitives\\u2014promises, generators and DOM\\u2014you can build custom user interfaces. Here\\u2019s a slider and a generator that yields the slider\\u2019s value:\"]),\n    _templateObject16 = _taggedTemplateLiteral([\"<input type=range>\"], [\"<input type=range>\"]),\n    _templateObject17 = _taggedTemplateLiteral([\"Generators.input returns a generator that yields promises. The promise resolves whenever the associated input element emits an input event. You don\\u2019t need to implement that generator by hand, though. There\\u2019s a builtin viewof operator which exposes the current value of a given input element:\"], [\"Generators.input returns a generator that yields promises. The promise resolves whenever the associated input element emits an input event. You don\\u2019t need to implement that generator by hand, though. There\\u2019s a builtin viewof operator which exposes the current value of a given input element:\"]),\n    _templateObject18 = _taggedTemplateLiteral([\"You can import cells from other notebooks. To demonstrate how custom user interfaces can expose arbitrary values to other cells, here\\u2019s a brushable scatterplot of cars showing the inverse relationship between horsepower and fuel efficiency.\"], [\"You can import cells from other notebooks. To demonstrate how custom user interfaces can expose arbitrary values to other cells, here\\u2019s a brushable scatterplot of cars showing the inverse relationship between horsepower and fuel efficiency.\"]),\n    _templateObject19 = _taggedTemplateLiteral([\"\", \"\"], [\"\", \"\"]);\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n// URL: https://beta.observablehq.com/d/d473c3b3a598a726\n// Title: Five-Minute Introduction\n// Author: ccesare (@ccesare)\n// Version: 356\n// Runtime version: 1\n\nvar m0 = {\n  id: \"d473c3b3a598a726@356\",\n  variables: [{\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject);\n    }\n  }, {\n    value: function value() {\n      return 2 * 3 * 7;\n    }\n  }, {\n    value: function value() {\n      var sum = 0;\n      for (var i = 0; i <= 100; ++i) {\n        sum += i;\n      }\n      return sum;\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject2);\n    }\n  }, {\n    name: \"initial color\",\n    value: function value() {\n      return \"red\";\n    }\n  }, {\n    name: \"mutable color\",\n    inputs: [\"Mutable\", \"initial color\"],\n    value: function value(M, _) {\n      return new M(_);\n    }\n  }, {\n    name: \"color\",\n    inputs: [\"mutable color\"],\n    value: function value(_) {\n      return _.generator;\n    }\n  }, {\n    inputs: [\"color\"],\n    value: function value(color) {\n      return \"My favorite color is \" + color + \".\";\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject3);\n    }\n  }, {\n    inputs: [\"html\"],\n    value: function value(html) {\n      return html(_templateObject4);\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject5);\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject6);\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject7);\n    }\n  }, {\n    name: \"html_color\",\n    inputs: [\"html\", \"color\"],\n    value: function value(html, color) {\n      return html(_templateObject8, color, color);\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject9);\n    }\n  }, {\n    name: \"status\",\n    value: function value() {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          resolve({ resolved: new Date() });\n        }, 2000);\n      });\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject10);\n    }\n  }, {\n    inputs: [\"status\"],\n    value: function value(status) {\n      return status;\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject11);\n    }\n  }, {\n    name: \"d3\",\n    inputs: [\"require\"],\n    value: function value(require) {\n      return require(\"d3-fetch@1\");\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject12);\n    }\n  }, {\n    name: \"countries\",\n    inputs: [\"d3\"],\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(d3) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return d3.tsv(\"https://unpkg.com/world-atlas@1/world/110m.tsv\");\n\n              case 2:\n                _context.t0 = function (a, b) {\n                  return b.pop_est - a.pop_est;\n                };\n\n                return _context.abrupt(\"return\", _context.sent.sort(_context.t0). // Sort by descending estimated population.\n                slice(0, 10));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function value(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return value;\n    }()\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject13);\n    }\n  }, {\n    name: \"i\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function value() {\n      var i;\n      return regeneratorRuntime.wrap(function value$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              i = 0;\n\n            case 1:\n              if (false) {}\n\n              _context2.next = 4;\n              return ++i;\n\n            case 4:\n              _context2.next = 1;\n              break;\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, value, this);\n    })\n  }, {\n    inputs: [\"i\"],\n    value: function value(i) {\n      return \"The current value of i is \" + i + \".\";\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject14);\n    }\n  }, {\n    name: \"date\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function value() {\n      return regeneratorRuntime.wrap(function value$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (false) {}\n\n              _context3.next = 3;\n              return new Promise(function (resolve) {\n                setTimeout(function () {\n                  return resolve(new Date());\n                }, 1000);\n              });\n\n            case 3:\n              _context3.next = 0;\n              break;\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, value, this);\n    })\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject15);\n    }\n  }, {\n    name: \"slider\",\n    inputs: [\"html\"],\n    value: function value(html) {\n      return html(_templateObject16);\n    }\n  }, {\n    name: \"sliderValue\",\n    inputs: [\"Generators\", \"slider\"],\n    value: function value(Generators, slider) {\n      return Generators.input(slider);\n    }\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject17);\n    }\n  }, {\n    name: \"viewof value\",\n    inputs: [\"html\"],\n    value: function value(html) {\n      return html(_templateObject16);\n    }\n  }, {\n    name: \"value\",\n    inputs: [\"Generators\", \"viewof value\"],\n    value: function value(G, _) {\n      return G.input(_);\n    }\n  }, {\n    inputs: [\"value\"],\n    value: function (_value) {\n      function value(_x2) {\n        return _value.apply(this, arguments);\n      }\n\n      value.toString = function () {\n        return _value.toString();\n      };\n\n      return value;\n    }(function (value) {\n      return value;\n    })\n  }, {\n    inputs: [\"md\"],\n    value: function value(md) {\n      return md(_templateObject18);\n    }\n  }, {\n    from: \"@mbostock/d3-brushable-scatterplot\",\n    name: \"cars\",\n    remote: \"selection\"\n  }, {\n    inputs: [\"cars\"],\n    value: function value(cars) {\n      return cars;\n    }\n  }, {\n    inputs: [\"cars\"],\n    value: function value(cars) {\n      return cars;\n    }\n  }, {\n    inputs: [\"md\", \"cars\"],\n    value: function value(md, cars) {\n      return md(_templateObject19, Array.from(new Set(cars.map(function (c) {\n        return c.name;\n      }))).sort().map(function (c) {\n        return \"* <a target=\\\"_blank\\\" href=\\\"https://google.com/search?tbm=isch&q=\" + escape(c) + \"\\\">\" + c + \"</a>\";\n      }).join(\"\\n\"));\n    }\n  }]\n};\n\nvar m1 = {\n  id: \"@mbostock/d3-brushable-scatterplot\",\n  variables: [{\n    name: \"viewof selection\",\n    inputs: [\"d3\", \"DOM\", \"width\", \"height\", \"xAxis\", \"yAxis\", \"data\", \"x\", \"y\", \"margin\"],\n    value: function value(d3, DOM, width, height, xAxis, yAxis, data, x, y, margin) {\n      var svg = d3.select(DOM.svg(width, height)).property(\"value\", []);\n\n      svg.append(\"g\").call(xAxis);\n\n      svg.append(\"g\").call(yAxis);\n\n      var dot = svg.append(\"g\").attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).selectAll(\"g\").data(data).enter().append(\"circle\").attr(\"transform\", function (d) {\n        return \"translate(\" + x(d.x) + \",\" + y(d.y) + \")\";\n      }).attr(\"r\", 3);\n\n      svg.append(\"g\").call(d3.brush().extent([[margin.left, margin.top], [width - margin.right, height - margin.bottom]]).on(\"start brush end\", brushed));\n\n      function brushed() {\n        var value = [];\n        if (d3.event.selection) {\n          var _d3$event$selection = _slicedToArray(d3.event.selection, 2),\n              _d3$event$selection$ = _slicedToArray(_d3$event$selection[0], 2),\n              x0 = _d3$event$selection$[0],\n              y0 = _d3$event$selection$[1],\n              _d3$event$selection$2 = _slicedToArray(_d3$event$selection[1], 2),\n              x1 = _d3$event$selection$2[0],\n              y1 = _d3$event$selection$2[1];\n\n          value = data.filter(function (d) {\n            return x0 <= x(d.x) && x(d.x) < x1 && y0 <= y(d.y) && y(d.y) < y1;\n          });\n        }\n        svg.property(\"value\", value).dispatch(\"input\");\n      }\n\n      return svg.node();\n    }\n  }, {\n    name: \"selection\",\n    inputs: [\"Generators\", \"viewof selection\"],\n    value: function value(G, _) {\n      return G.input(_);\n    }\n  }, {\n    name: \"d3\",\n    inputs: [\"require\"],\n    value: function value(require) {\n      return require(\"https://d3js.org/d3.v5.min.js\");\n    }\n  }, {\n    name: \"height\",\n    value: function value() {\n      return 600;\n    }\n  }, {\n    name: \"xAxis\",\n    inputs: [\"height\", \"margin\", \"d3\", \"x\", \"width\", \"data\"],\n    value: function value(height, margin, d3, x, width, data) {\n      return function (g) {\n        return g.attr(\"transform\", \"translate(0,\" + (height - margin.bottom) + \")\").call(d3.axisBottom(x)).call(function (g) {\n          return g.select(\".domain\").remove();\n        }).call(function (g) {\n          return g.append(\"text\").attr(\"x\", width - margin.right).attr(\"y\", -4).attr(\"fill\", \"#000\").attr(\"font-weight\", \"bold\").attr(\"text-anchor\", \"end\").text(data.x);\n        });\n      };\n    }\n  }, {\n    name: \"yAxis\",\n    inputs: [\"margin\", \"d3\", \"y\", \"data\"],\n    value: function value(margin, d3, y, data) {\n      return function (g) {\n        return g.attr(\"transform\", \"translate(\" + margin.left + \",0)\").call(d3.axisLeft(y)).call(function (g) {\n          return g.select(\".domain\").remove();\n        }).call(function (g) {\n          return g.select(\".tick:last-of-type text\").clone().attr(\"x\", 4).attr(\"text-anchor\", \"start\").attr(\"font-weight\", \"bold\").text(data.y);\n        });\n      };\n    }\n  }, {\n    name: \"data\",\n    inputs: [\"require\"],\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(require) {\n        var cars, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return require(\"@observablehq/cars\");\n\n              case 2:\n                cars = _context4.sent;\n                data = cars.map(function (_ref3) {\n                  var name = _ref3.Name,\n                      x = _ref3.Miles_per_Gallon,\n                      y = _ref3.Horsepower;\n                  return { name: name, x: x, y: y };\n                });\n\n                data.x = \"Miles per Gallon\";\n                data.y = \"Horsepower\";\n                return _context4.abrupt(\"return\", data);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function value(_x3) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return value;\n    }()\n  }, {\n    name: \"x\",\n    inputs: [\"d3\", \"data\", \"margin\", \"width\"],\n    value: function value(d3, data, margin, width) {\n      return d3.scaleLinear().domain(d3.extent(data, function (d) {\n        return d.x;\n      })).nice().range([margin.left, width - margin.right]);\n    }\n  }, {\n    name: \"y\",\n    inputs: [\"d3\", \"data\", \"height\", \"margin\"],\n    value: function value(d3, data, height, margin) {\n      return d3.scaleLinear().domain(d3.extent(data, function (d) {\n        return d.y;\n      })).nice().range([height - margin.bottom, margin.top]);\n    }\n  }, {\n    name: \"margin\",\n    value: function value() {\n      return { top: 20, right: 30, bottom: 30, left: 40 };\n    }\n  }]\n};\n\nvar notebook = {\n  id: \"d473c3b3a598a726@356\",\n  modules: [m0, m1]\n};\n\nexports.default = notebook;\n\n//# sourceURL=webpack:///./client/notebooks/TestNotebook/notebook.js?");

/***/ })

}]);